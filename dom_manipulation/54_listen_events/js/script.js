/**Добавляем прослушивание событие, что у нас загрузилась вся страница html, т.е. весь html код, оно так и
 *  называется - DOMContentLoaded, а все остальное запихиваем внутрь этого события, нашу функцию и все остальное, т.е.
 *  когда у нас загрузился весь контент, т.е. вся страница, то значит событие произошло и начинает отрабатывать наш
 *  код, который внутри, т.е. т.к. страница загрузилась, то все html элементы уже созданы и к ним можно обращаться**/
document.addEventListener("DOMContentLoaded",
    function (event) {

        function sayHello(event) {
          /**Функция, в которую параметром передается какое-то событие и которая делает следующее**/
          this.textContent = "Said it!";
          /**Меняет у кнопки надпись**/
          var name =
              document.getElementById("name").value;
          /**Записывает в переменную name то, что сейчас внутри
           элемента с id="name", т.е. то, что мы ввели в поле ввода, т.е. как бы значение (value) у элемента**/
          var message = "<h2>Hello " + name + "!</h2>";
          /**Сохраняем в переменную тег, потом Hello + то, что ввели в поле +!**/

          // document
          //   .getElementById("content")
          //   .textContent = message;

          document
              .getElementById("content")
              .innerHTML = message; /**Записываем в содержимое элемента, у которого id="content", записываем в него то, что у
           нас хранится в переменной message**/

          if (name === "student") {
            /**Добавляем проверку - если в переменной name у нас student (это то, что мы ввели в
             поле ввода**/
            var title =
                document
                    .querySelector("#title")
                    .textContent;
            title += " & Lovin' it!";
            /**То мы в содержимое элемента с id="title" добавляем & Lovin' it! Здесь мы id
             элемента вводим через #, т.к. мы ищем элемент по селектору, а не по id, т.е. указываем, как в css**/
            document
                .querySelector("h1")
                .textContent = title; /**А теперь мы в содержимое этого же элемента с тегом h1 записываем то, что у нас
             храниться в переменной title, в которую мы выше добавили текст. Здесь у нас поиск по селектору, сделали так,
             просто, чтобы показать, а записывать в этот же элемент еще раз надо, т.к. в строке сверху содержимое в элемент
             не записалось, т.к. это типа ссылочная переменная**/
          }
        }

        /**Добавляем прослушивание событий, т.е. ищем по селектору button нашу кнопку, потом пишем addEventListener, т.е.
         *  что мы добавляем для этого элемента прослушивание события, потом в скобках в первом аргументе пишем, какое
         *  событие будем прослушивать, в нашем случае этот click, а вторым аргументом пишем, что будем делать, когда
         *  событие произойдет, в нашем случае мы будем запускать функцию sayHello**/
        document.querySelector("button")
            .addEventListener("click", sayHello);
      }
   );
/**Другой вариант прослушивания события на кнопку - когда кликаем, запускается функция, хз, чем этот вариант хуже, по
 написанию он вроде бы даже и проще, тут мы как бы выбираем по селектору нужный элемент, это у нас объект и этому
  объекту добавляем свойство onclick, и  в это свойство записываем  значение функции sayHello, т.е. именно само
   значение функции, поэтому мы пишем ее без круглых скобок**/
// document.querySelector("button")
//   .onclick = sayHello;