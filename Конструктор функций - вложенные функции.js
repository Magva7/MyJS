// Функция принимает на вход mnojitel_1 и внутри умножает его на mnojitel_2, правда хз как, мы же mnojitel_2 вроде
// внутрь функции не передаем, видимо она его как-то снаружи берет
function umnojalka(mnojitel_1) {
    var result_umnoj = function (mnojitel_2) {
        return mnojitel_1 * mnojitel_2;
    };

    return result_umnoj;
}

var umnoj_na_3 = umnojalka(3); /*Т.е. мы в переменной как бы сохраняем функцию умножалки, у которой первый аргумент
 уже забит и = 3*/
console.log(umnoj_na_3(10)); /*Потом вы в эту переменную (по сути это функция) передаем второй аргумент и результат
 умножения выводим в консоль*/
var umnoj_na_2 = umnojalka(2);
console.log(umnoj_na_2(100));

// Функция, в которую передаем число, и вторым аргументом передадим функцию, т.е. сможем выбирать, что мы с числом
// потом заходим сделать, если передадим функцию умножить на 3, то эта наша головная функция doOperationOn возьмет
// ту функцию, которую мы в нее передали вторым агрументом (operation) и в эту функцию вставит число, которое мы
// передали первым аргументом, в итоге у нас получился как бы конструктор-калькулятор, мы в него передаем число и
// функцию, которую написали ранее, а дальше с этим числом произойдет то, что мы в этой функции, которую передали,
// написали, вопрос только в том, как это работает, передаем 1 аргумент, а дальше функция считает и второй аргумент
// как-то сама находит
function doOperationOn(mnojitel_2, operation) {
    return operation(mnojitel_2);
}

var result = doOperationOn(5, umnoj_na_3);
console.log(result);
result = doOperationOn(100, umnoj_na_2);
console.log(result);










